buildscript {
    ext.version = new File('resources/com/soywiz/vitaorganizer/currentVersion.txt').text
    ext.kotlin_version = '1.1.4-2'
    ext.proguard_version = '5.3.3'
    ext.launch4j_version = '2.4.1'

    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.sf.proguard:proguard-gradle:$proguard_version"
        classpath "gradle.plugin.edu.sc.seis.gradle:launch4j:$launch4j_version"
    }
}

group 'com.soywiz'
version new File('resources/com/soywiz/vitaorganizer/currentVersion.txt').text

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'edu.sc.seis.launch4j'

mainClassName = 'com.soywiz.vitaorganizer.VitaOrganizer'
compileJava.options.encoding = 'UTF-8'

allprojects {
	apply plugin: 'java'
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src', 'ftp4j/src']
    main.resources.srcDirs = ['resources', 'assets']
    test.java.srcDirs = ['test']
    test.kotlin.srcDirs = ['test']
    test.resources.srcDirs = ['testresources', 'testassets']
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains:annotations-java5:15.0"
    //compile "commons-net:commons-net:3.5"
    testCompile "junit:junit:4.11"
}

jar {
    manifest {
        attributes("Main-Class": "com.soywiz.vitaorganizer.VitaOrganizer")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task minimizedJar(type: proguard.gradle.ProGuardTask) {
    print "build/libs/vitaorganizer-${version}.jar"
    injars "build/libs/vitaorganizer-${version}.jar"
    outjars "build/libs/vitaorganizer-${version}.min.jar"
    libraryjars System.properties.'java.home' + "/lib/rt.jar"
    printmapping "build/libs/vitaorganizer-${version}.map"
    ignorewarnings
    //dontobfuscate
    keep access:
		'public',
		name: 'com.soywiz.vitaorganizer.VitaOrganizer', {
        	method access: 'public static',
			type: 'void',
			name: 'main',
			parameters: 'java.lang.String[]'
    	}
    	keep access: 'public',
        name: 'kotlin.text.RegexOption', {
			method access: 'public'
			method access: 'private'
		}
}

//minimizedJar.dependsOn jar
createExe.dependsOn jar

//copyL4jLib.dependsOn minimizedJar

// https://github.com/TheBoegl/gradle-launch4j
launch4j {
	//opt = "-Dsun.java2d.d3d=false -Dsun.java2d.noddraw=true"
	jvmOptions = ["-Dsun.java2d.d3d=false", "-Dsun.java2d.noddraw=true"]
    print "version: $version"
    outfile = "${project.buildDir}/libs/vitaorganizer-${version}.exe"
    icon = "${project.rootDir}/extra/icon.ico"
    mainClassName = project.mainClassName
    //copyConfigurable = project.tasks.fatJar.outputs.files
    //jar = "lib/${project.tasks.fatJar.archiveName}"
    maxHeapSize = 1024
    jar = "${project.buildDir}/libs/vitaorganizer-${version}.min.jar"
}

//task release(dependsOn: ['clean', 'minimizedJar', 'launch4j']) << {
//	println 'release'
//}

task buildApp(type:Exec, dependsOn: jar) {
	commandLine "jar2app",
		"${project.buildDir}/libs/vitaorganizer-${version}.jar",
		"-i", "${project.rootDir}/extra/icon.icns",
		"${project.buildDir}/libs/vitaorganizer-${version}.app"
}

task buildExe(dependsOn: [jar, launch4j]) {
}